{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues":[
                "East US",
                "West Europe",
                "Central US",
                "Canada Central",
                "Canada East"
            ]
        },
        "TFRPlocation": {
            "type": "string",
            "defaultValue": "West Central US",
            "allowedValues":[
                "West Central US"
            ],
            "metadata": {
                    "description": "The location of the TFRP."
            }
        },
        "clusterName": {
            "type": "string"
        },
        "adminUser": {
            "type": "string"
        },
        "publicKey": {
            "type": "string"
        },
        "clientId": {
            "type": "string"
        },
        "secret": {
            "type": "securestring",
            "defaultValue": ""
        },
        "nodeCount": {
            "type": "int",
            "defaultValue": 2
        },
        "nodeVMSize":{
            "type": "string",
            "defaultValue": "Standard_DS2_v2"
        },
        "kubernetesVersion": {
            "type": "string",
            "allowedValues": [
                "1.7.7",
                "1.7.9",
                "1.7.12",
                "1.7.15",
                "1.7.16",
                "1.8.1",
                "1.8.2",
                "1.8.6",  
                "1.8.7",
                "1.8.10",
                "1.8.11",
                "1.9.1",
                "1.9.2",
                "1.9.6"
            ]
        },
        "storageProfile":
        {
            "type": "string",
            "defaultValue": "ManagedDisks",
            "allowedValues": [
                "ManagedDisks",
                "StorageAccount"
            ]
        },
        "secretType":{
            "type":"string",
            "allowedValues": [
                "parameter",
                "keyvault"
            ],
            "defaultValue": "parameter"
        },
        "keyVaultId": {
            "type":"string",
            "defaultValue": ""
        },
        "secretName": {
            "type":"string",
            "defaultValue": ""
        },
        "secretVersion": {
            "type":"string",
            "defaultValue": ""
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        }
    },
    "variables": {
        "kubernetesProviderRegistrationName":"[concat('aks',parameters('clusterName'))]",
        "keyVaultSecretRef":{
            "vaultID": "[parameters('keyVaultId')]",
            "secretName":"[parameters('secretName')]",
            "version": "[parameters('secretVersion')]"    
        },
        "aksRG":"[concat('MC_',resourceGroup().name,'_',parameters('clusterName'),'_',replace(parameters('location'),' ', ''))]",
        "ipName":"[concat(parameters('clusterName'),'-',uniquestring(resourceGroup().id,deployment().Name))]",
        "ipAddressTemplateLink": "[uri(parameters('_artifactsLocation'), 'nestedTemplates/publicIPAddress.json')]",
        "resourceGroupTemplateLink": "[uri(parameters('_artifactsLocation'), 'nestedTemplates/resourceGroupName.json')]",
        "nodePoolName":"nodepool1"
    },
    "resources": [
        {
            "name": "[parameters('clusterName')]",
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2017-08-31",
            "location": "[parameters('location')]",
            "properties": {
                "dnsPrefix": "[concat(parameters('clusterName'),uniquestring(resourceGroup().id,deployment().Name))]",
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "agentPoolProfiles": [
                    {
                        "name": "[variables('nodePoolName')]",
                        "count": "[parameters('nodeCount')]",
                        "vmSize": "[parameters('nodeVMSize')]",
                        "dnsPrefix": "[concat(parameters('clusterName'),uniquestring(variables('nodePoolName'),resourceGroup().id,deployment().Name))]",
                        "storageProfile": "[parameters('storageProfile')]",
                        "osType": "Linux"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "[parameters('adminUser')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('publicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": {
                    "clientId": "[parameters('clientId')]",
                    "secret": "[if(equals(parameters('secretType'),'parameter'),parameters('secret'),json('null'))]",
                    "keyVaultSecretRef":"[if(equals(parameters('secretType'),'keyvault'),variables('keyVaultSecretRef'),json('null'))]"
                }
            }
        },
        {
            "name": "GetResourceGroupName",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('resourceGroupTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourcegroupName":{
                        "value":"[variables('aksRG')]"
                    }
                }
            }
        },
        {
            "name": "CreatingPublicIp",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[parameters('clusterName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ipAddressTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicDnsName": {
                        "value": "[concat('aks',uniquestring(resourceGroup().id,deployment().Name))]"
                    },
                    "publicIpName": {
                        "value": "[variables('ipName')]"
                    },
                    "resourcegroupName":{
                        "value":"[reference('GetResourceGroupName').outputs.name.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.TerraformOSS/providerregistrations",
            "name": "[variables('kubernetesProviderRegistrationName')]",
            "apiVersion": "2018-05-01-preview",
            "location": "[parameters('TFRPlocation')]",
            "properties": {
                "providertype": "kubernetes",
                "settings": {
                    "inline_config": "[Base64ToString(ListCredential(resourceId('Microsoft.ContainerService/managedClusters/accessProfiles', parameters('clusterName'),'clusterAdmin'), '2017-08-31').properties.kubeConfig)]"
                }
            }
        },
        {
            "type": "Microsoft.TerraformOSS/resources",
            "name": "NginxPod1",
            "apiVersion": "2018-05-01-preview",
            "location": "[parameters('TFRPlocation')]",
            "properties": {
                "providerId": "[resourceId('Microsoft.TerraformOSS/providerregistrations', variables('kubernetesProviderRegistrationName'))]",
                "resourcetype": "kubernetes_pod",
                "settings": {
                    "metadata": [
                        {
                            "name": "nginx1",
                            "labels": {
                                "App": "nginx1"
                            }
                        }
                    ],
                    "spec": [
                        {
                            "container": {
                                "image": "nginx:1.7.8",
                                "name": "nginx",
                                "port": {
                                    "container_port": 8080
                                }
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[variables('kubernetesProviderRegistrationName')]"
            ]
        },
        {
            "type": "Microsoft.TerraformOSS/resources",
            "name": "Service",
            "apiVersion": "2018-05-01-preview",
            "location": "[parameters('TFRPlocation')]",
            "properties": {
                "providerId": "[resourceId('Microsoft.TerraformOSS/providerregistrations', variables('kubernetesProviderRegistrationName'))]",
                "resourcetype": "kubernetes_service",
                "settings": {
                    "metadata": [
                        {
                            "name": "[concat('service-',uniquestring(resourceGroup().id,deployment().Name))]"
                        }
                    ],
                    "spec": [
                        {
                            "selector":{
                                "App":"nginx1"
                            },
                            "port": [ 
                                {
                                    "name":"nginx1-port-80",
                                    "protocol": "TCP",
                                    "port": 80,
                                    "target_port": 8080
                                }
                            ], 
                            "type":"LoadBalancer",
                            "load_balancer_ip":"[reference('CreatingPublicIp').outputs.PublicIPAddress.value]"    
                        }
                    ]
                }
            },
            "dependsOn": [
                "NginxPod1"
            ]
        }
    ],
    "outputs": {
        "PublicIPAddress" :{
            "type": "string",
            "value": "[reference('CreatingPublicIp').outputs.PublicIPAddress.value]"
        },
        "FQDN" :{
            "type": "string",
            "value": "[reference('CreatingPublicIp').outputs.FQDN.value]"
        }
    }
}